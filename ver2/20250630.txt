< 수료기준 >
1인 1agent > 10분 발표

0. 교육자료
> 자료 : https://adorable-hail-415.notion.site/KT-ds-MS-AI-1f9137efedf68028aec6c315379e637e?p=202137efedf68059adc9c9092561462e&pm=s
> 계정정보
copilot : emic235455@momail.kr / Tomato723109!
ms azure : user24@modulabsbiz.onmicrosoft.com / modu123!

> 수업자료
https://github.com/KoreaEva/KTds2 : KTds Microsoft AI 2기 과정

=========================
< 개념 >
Azure AI Foundry는 마이크로소프트의 Azure 플랫폼 내에서 제공되는 AI 개발 및 배포 도구와 서비스를 포괄하는 개념입니다. 이 플랫폼은 기업과 개발자들이 인공지능(AI) 솔루션을 쉽게 구축하고 배포할 수 있도록 돕기 위해 설계되었습니다.   
  
주요 기능과 특징은 다음과 같습니다:  
   
1. **모델 개발**: Azure AI Foundry는 다양한 머신러닝 및 딥러닝 모델을 개발하는 데 필요한 도구와 프레임워크를 제공합니다. 사용자는 Python, R 등 다양한 프로그래밍 언어를 사용할 수 있습니다.  
   
2. **자동화**: 머신러닝 모델의 훈련, 검증, 배포 과정의 자동화를 지원하여 개발자가 더 빠르고 효율적으로 작업할 수 있게 합니다.  
   
3. **데이터 준비**: 데이터 전처리 및 탐색을 위한 도구를 제공하여, 모델 훈련에 적합한 데이터를 준비할 수 있도록 돕습니다.  
   
4. **배포 및 관리**: 모델을 클라우드 환경에 쉽게 배포하고, 운영 중인 모델의 성능을 모니터링할 수 있는 기능을 포함하고 있습니다.  
   
5. **통합**: Azure의 다른 서비스와 통합되어, 데이터 저장소, 애플리케이션 및 분석 도구와 원활하게 연결할 수 있습니다.  
   
Azure AI Foundry는 기업들이 AI 솔루션을 빠르게 개발하고, 이를 비즈니스 가치로 전환할 수 있도록 돕는 강력한 도구입니다. AI 기술을 활용하려는 기업이나 개발자에게 유용한 플랫폼이 될 수 있습니다.
------
* chatGPT : OPENAI에서 만든 인공지능
* gemini(제미나이) : 구글에서 만든 인공지능 - 대화형

==========================
< 06.30 1일차 >
주제 : azure에서 ai를 어떻게 쓰는가
- 어떤 프로젝트를 만드는게 좋은지 고민..
- 70점 이상이면 pass

1개의 tenant에 묶여있음 -> 작업내용 서로 봄

> ms 교육
- Foundry 모델에서 Azure OpenAI를 사용하여 애플리케이션 개발 -> https://learn.microsoft.com/ko-kr/training/paths/develop-ai-solutions-azure-openai/

1) Azure OpenAI Service 액세스
- 포털에서 하는 법 << CLI 기반 명령어로 하는 법(관리하기 용이함)
* 리소스 = 앱에 존재하는 모든 것(데이터베이스 등)
1-1) 리소스그룹 만들기 : user24-RG > 미국쪽 사용 권장(East US)
* azure는 클라우드 보안을 통과함(24년 말)
* 클라우드는 marketplace 랑 동일한 개념. 즉, 쿠팡...?
1-2) 리소스 만들기
* Canonical > 우분투 서버 만들기 잘함.
- Azure OpenAI > (PTUs 사용하면 안됨)
1-3) 키 및 엔드포인트 설정
- 키 노출되면 재생성
1-4) Exlpore Azure AI Foundry portal
* Foundry > project를 만들면 model catalog(openai service, ai search, 등등)를 전체 다 사용 가능하고, openAI를 만들면 Azure OpenAI만 사용 가능함.

< 채팅 플레이그라운드 >
(1) 사용할 모델 언어 정해야 함. : 모델 카탈로그 > gpt3.5 : 비싸고 성능 안좋음. / gpt 4.5 : 비용 비쌈. / gpt-4.1-mini or gpt-4o-mini 중 1개 사용
> 이 모델 사용 > 배포이름으로 구별하기 때문에 "dev-gpt-4o-mini-cij"와 같이 구별해주면 됨(나중에 호출할 때 모델이름이 아니라 배포이름으로 호출하기 때문에 중요함)
> python/openai SDK/key authentication
> 모델 지침 및 컨텍스트 제공 : 너는 동시 통역가야. 이제부터 모든 내용을 영어로 번역해.

(2) code 짜기
- endpoint = 대상 URL의 https://openai-cij.openai.azure.com 까지만
- 응답 : response -> 응답이 2개 이상일 수 있어서 리스트 형식임.

-- streamlit > stremlit run _.py

============================
< 프로젝트 구상 > 
=> 수요일까지 구상 필요함....
Azure 기반 생성형 AI 프로젝트 만들기
- 사용자 인터페이스 - 웹버전 - ui 있어야 함 = Streamlit
- 데이터 소스는 선택


============================
< 2일차 >
Azure App Service를 사용하여 웹 애플리케이션 호스트 : PaaS
- Web App / Api App / Logic App

(1) Azure App Service를 사용하여 웹 애플리케이션 호스트 - 웹앱 만들기
리소스그룹 > 내 리소스 그룹 선택 > 웹앱만들기 > 인스턴스정보:유니크하게 (.azurewebsites.net) > 게시 : 코드 > python 3.11 - 너무 높으면 안 돌아감 > 지역 : korea central > 
* 각 서비스의 사이즈 = sku (가격 책정 플랜)

* token 기반 : 사용 안하면 과금 x
* 웹서버(웹앱) : 만드는 순간부터 과금o

-> 기본 도메인 : cij001.azurewebsites.net 만들어짐.

* 환경변수 : .env에 있는 값들을 환경 변수에 넣어놓으면 읽을 수 있음

* 웹서버는 스케일 업보다 스케일 아웃이 더 많음(더 중요함)
- 프로덕션용 : 인스턴스 10개까지 늘어남
- 프로덕션용 sku 선택 후 > 자동 선택하면 스케일 관리 자동으로 됨.

(2) Azure Web App에 Streamlit 배포하기 - 배포
WebAppTest 해보기
> streamlit run app.py 잘되면 웹앱에 배포해보기
: https://github.com/KoreaEva/KTds2/blob/main/Day%205/02.streamlit_deployment.md
   - extension 설치 : Azure App Service
   - A 라는 모양 누르고 azure 로그인 하면 내 리소스 다 볼 수 있음 (>App Service)
   - pip install streamlit : 웹 서버에는 streamlit이 없을테니까 설치할꺼다
   - azure 포탈 > 구성 > 시작명령어 : bash /home/site/wwwroot/streamlit.sh
   - 내 리소스 마우스 우클릭 : deploy to web app > 지금꺼 다 지우고 해당 소스 배포
* 배포는 꼬이면 어려움! 잘 해야 함.
   - 웹앱 > 개요 > 다시 시작

+ 추가 설명
* copilot > Azure Web App 서비스를 만드는데 이름은 cij002 그리고 App Service Plan cij002로 만드는데 sku는 B3로 생성할 예정이고 runtime은 python 3.11 버전으로 코드 방식으로 배포할 수 있는 az 명령을 생성해줘
> 이 코드는 copilot 옆에 대시 버튼 눌러서 넣으면 됨
    - 리소스그룹 : user24-RG
    - App service 이름 정하고 ex) cij002

(3) Storage Account - 스토리지 구현
* Blob > container(드라이브 역할) : 이걸 제일 많이 씀.
   - 리소스 만들기 : 스토리지 계정 > user24storagecij001(대소문자, 언더바 안먹힘) > Korea central > gen 2 > LIS?

* azcopy : 파일 병렬로 올리는거 가능
 > 더 나아가 azcopy databox 도 있음

> 컨테이너 추가
   + 액세스 변경 : blob으로! 
      - 비공개 : azure 내에서 접근 가능
      - blob : 선택 불가능 = default 사용안함 > [개요 > Blob 익명 액세스 > Blob 익명 액세스 허용 - 사용]
      - 컨테이너 : 풀 엑세스
-> 개별 url 만들어짐
-> 기본 html만 올려두고 이미지만 storage에 놓고 부하를 줄임.

(4) 02. Azure에서 기계 학습 시작 => x

(5) 03. Azure에서 자연어 처리 시작
- PII(개인 식별 정보) 검색 은 개인 건강 정보(PHI)를 포함하여 개인적으로 중요한 정보를 식별합니다.
- 핵심 구 추출 은 구조화되지 않은 텍스트의 주요 개념을 나열합니다.
=> *** 개인정보 포함여부, 로그에서 주요 단어(어떤걸 보고 고쳐야 하는지 볼 수 있나?)
=> *** VOC 문의/답변 -> 분류 -> 대처방안 요약?
   - Extract PII : 개인정보 추출해서 **로 변경
   - Extract key phrases 긍정/부정 분류 or 키워드 분류 
   - 요약

> 리소스 만들기 : 언어 서비스 > 만들기 ( 옵션 : 사용자 지정 질문 답변 -> pdf 등 우리가 업로드 한 파일의 내용으로 답변 생성 (단, 월 15000원? 고정비용 발생) )
> 지역 선택(잘못 선택하면 특정 기능이 안되는 지역이 있음 -> https://www.perplexity.ai/ > Azure langauge service에서 language understading 지원 되는 지역을 알려줘 > 2개 다 체크된 지역으로 만들면 됨) > East US/이름/S

* 지역은 중국, 독일껀 약관이 다르기 때문에 안 쓰는게 좋음

- 생성은 azure portal에서 만들고 사용은 개요 > language studio 시작하기 > sign in
   -> 접근 가능한 endpoint 입력하면 python으로도 사용 가능

* PII
   -> 2~3가지 합쳐져서 개인을 식별할 수 있다고 판단하면 개인정보로 침 / 나중에 풀어줄 수 있음
   -> 주요정보 제외 한 데이터를 애초에 vectorDB에 넣기
* language understanding : 챗봇 만들 때 필요
   (1) Intent 정의 : 인사greeting/주문order/배달delivery
     - 나중에 intent 미감지 애들이 모이는데 이거 따로 학습 시켜주면 됨
   > Data labeling : 각 intent별로 발화 입력하고 save changes
   (2) entity 감지해야 답변이 나옴
   > 라벨링 할 때, 발화에서 각 단어에 intent를 만들어서 넣어줄 수 있음. (수량의 경우, 한국어는 max 수량까지 다 넣어줘야 인식이 가능함.. 영어는 one만 입력해도 다 가능한데)
   - 여러개 entity 있을 때 순서도 중요함.
   (3) Training jobs > 모델 만들기
   (4) Deploying a model > endpoint 만들기 > get prediction url : request 코드 있음
   (5) Testing deployment : 테스트 가능

** azure for students : 학교 계정 > 1년 100달러 무료
   
(6) Computer Vision 개념 소개
> computer vision => 얼굴 있다 없다만 판단
    + face api 해야 얼굴 인식
   : 이미 학습된 버전
> custom vision : 우리 사진을 학습시켜서 사용 가능한 버전

(1) 리소스 만들기 > Computer Vision - Microsoft | Azure Service > 지역 : 거의 모든 지역에서 다 서비스 가능함.
(2) 서비스 사용하기 : vision studio






















